/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       ListNode dummy = new ListNode(-1);
       ListNode cur = dummy;  //creating one dummy node
       int carry=0; //taking carry as 0 for intital
       while(l1!=null || l2!=null || carry>0){           // the conditioon because if l1==null we add carry value to the node of l2;
           int sum = 0;    
           if(l1!=null){     
               sum =sum+l1.val;
               l1=l1.next;
           }
           if(l2!=null){
               sum =sum+l2.val;
               l2=l2.next;
           }
           sum = sum+carry;               // adding carry to sum
           carry = sum/10;      
           sum = sum%10;              
           ListNode n = new ListNode(sum);      //creating new node for added nodes 
           cur.next=n;
           cur=cur.next;
       }
          return dummy.next;
    }
}
