/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode t1 = list1;
        ListNode t2 = list2;
        ListNode dnode = new ListNode();
        dnode.next = null;
        ListNode temp = dnode;
        if(list1==null && list2 == null){
            return null;
        }
        while(t1 !=null && t2!=null){
            if(t1.val< t2.val){
                temp.next = t1;
                temp = t1;
                t1 = t1.next;
            }else if(t1.val>t2.val){
                temp.next = t2;
                temp =t2;
                t2 = t2.next;
            }else{
                temp.next = t1;
                temp = t1;
                t1 = t1.next;
            }
        }
        if(t1==null){
            temp.next=t2;
        }
        if(t2==null){
            temp.next = t1;
        }

        
        return dnode.next;
    }
}
